/*Задание №1. Дайте ответ, что будет в результате выполнения
 данных ниже примеров. С объяснением, почему это так.*/

/* 1- true строки сравниваются посимвольно символы "к" и "о" 
в словах равны,а символ "т">"д" */

"кот" > "код";
console.log("кот" > "код");

/* 2- Приоритет умножения выше чем сложения, поэтому первым 
выолняется умножения числа 2 на строку  "2"
получаем число 4
строка "2" складывается с числом 4 получаем строку "24"*/
"2" + 2 * "2";
console.log("2" + 2 * "2");

/* 3- true, оба значения преобразуюися в логические значения. 
null = false и undefined = false следовательно при сравнении будет true
 */
undefined == null;
console.log(undefined == null);

/* 4- false , оба значения преобразуюися в логические значения. 
null = false и undefined = false сделовательно false != false это false*/
undefined != null;
console.log(undefined != null);
/* 5- операнды не являются одним и тем же типом, null-object, 0-number.
 Используется абстрактный алгоритм сравнения для равенства
результат вернет  false */
null == 0;
console.log(null == 0);

/* 6- false  При сравнении значений разных типов JavaScript приводит 
каждое из них к числу в итоге число 2 не может быть больше числа 3*/
2 > "3";
console.log(2 > "3");

/* 7- оператор - приводит все к числам null-0 false-0 получаем 0-0.
 0+true = 1 так как true это 1 */
null - false + true;
console.log(null - false + true);

/* 8- NaN результат деления числа на строку будет NaN, 
так как преобразование "I" будет NaN*/
1 / "I";
console.log(1 / "I");

/* 9- Number 6 при умножении будут строки преобразовываться 
числа итог 2 умножить 3*/
"2" * "3";
console.log("2" * "3");

/* 10- String "90" первое действие 4+5 даст нам число 9. 
9+"0" так как один операнд строка то второй тоже преобразуется в строку*/
4 + 5 + "O";
console.log(4 + 5 + "O");

/* 11- Строка "I45"  так как один из пореандов строка то другой преобразуется
в строку, итог строка*/
"I" + 4 + 5;
console.log("I" + 4 + 5);

/* 12- Число 2, так как операция вычитания, идет попытка преобразовать операнды к числам.
строка "4" преобразуется в число 4 и вычитание работает как с числами */
"4" - 2;
console.log("4" - 2);

/* 13- Преобразование строк в числа "4"-число 4, а "4х"-NaN
в итоге 4-NaN= NaN*/
"4" - "4x";
console.log("4" - "4x");

/* 14- true равенство с преобразованием типов. Строка "23" будет преобразована в число 23
23 равно 23 вернет true */
"23" == 23;
console.log("23" == 23);

/* 15-false Не строгое равенство при сравнении двух операндов разных типов пытается их привести к одому типу
в данном случае типы разные получаем false */
null == false;
console.log(null == false);

/* 16- -Infinity  деление преобразует строку "-4" в число -4, при делении на ноль отрицательного числа получиться -Infinity 
если прибавить к -Infinity чилос 1 получим все тот же -Infinity */
" -4 " / 0 + 1;
console.log(" -4 " / 0 + 1);

/* 17- 1  При сложении null преобразуется в 0. Итог 0+1=1 */
null + 1;
console.log(null + 1);

/* 18- NaN Преобразование undefined -> NaN, a null в 0 получим NaN+0=NaN*/
undefined + null;
console.log(undefined + null);

/* 19- false Строгое сравнение === сравнивает по типам, типы не равны false*/
1 === "1";
console.log(1 === "1");

/* 20-false Преоброзование строк "2" в число 2, дает нам сравнение 2>10 - это ложь*/
"2" > 10;
console.log("2" > 10);

/* 21- false  NaN даже сам себе не равен 
это не строгое равенство с преобразованием типов*/
NaN == undefined;
console.log(NaN == undefined);
